{"version":3,"sources":["../src/util/okComputer.ts","../node_modules/rgbquant/src/rgbquant.js","../src/graphics/structs.ts","../src/graphics/Palette.ts","../src/graphics/BackgroundImage.ts","../src/state/util/time.ts","../src/state/structs.ts","../node_modules/lodash-es/_freeGlobal.js","../node_modules/lodash-es/_root.js","../node_modules/lodash-es/_Symbol.js","../node_modules/lodash-es/_getRawTag.js","../node_modules/lodash-es/_objectToString.js","../node_modules/lodash-es/_baseGetTag.js","../node_modules/lodash-es/_overArg.js","../node_modules/lodash-es/_getPrototype.js","../node_modules/lodash-es/isObjectLike.js","../node_modules/lodash-es/isPlainObject.js","../node_modules/symbol-observable/es/ponyfill.js","../node_modules/symbol-observable/es/index.js","../node_modules/redux/es/createStore.js","../node_modules/redux/es/utils/warning.js","../node_modules/redux/es/combineReducers.js","../node_modules/redux/es/bindActionCreators.js","../node_modules/redux/es/compose.js","../node_modules/redux/es/applyMiddleware.js","../node_modules/redux/es/index.js","../src/state/actionCreators.ts","../src/state/util/smartObjects.ts","../src/state/util/_createReducer.ts","../src/state/util/StorageContainer.ts","../src/state/util/hydrate.ts","../node_modules/redux-thunk/es/index.js","../src/state/index.ts","../src/entry_extras.ts","../src/entry_main.ts"],"names":["freeGlobal","global","Object","root","freeSelf","self","Function","Symbol","getRawTag","objectProto","prototype","hasOwnProperty","nativeObjectToString","toString","symToStringTag","toStringTag","undefined","value","isOwn","call","tag","unmasked","e","result","objectToString","baseGetTag","nullTag","undefinedTag","overArg","func","transform","arg","getPrototype","getPrototypeOf","isObjectLike","isPlainObject","objectTag","funcProto","funcToString","objectCtorString","proto","Ctor","constructor","symbolObservablePonyfill","observable","window","module","createStore","ActionTypes","reducer","preloadedState","enhancer","_ref2","Error","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","slice","getState","subscribe","listener","isSubscribed","push","index","indexOf","splice","dispatch","action","type","listeners","i","length","INIT","replaceReducer","nextReducer","$$observable","_ref","outerSubscribe","observer","TypeError","observeState","next","unsubscribe","warning","message","console","error","combineReducers","getUndefinedStateErrorMessage","key","actionType","getUnexpectedStateShapeWarningMessage","inputState","reducers","unexpectedKeyCache","reducerKeys","keys","argumentName","match","join","unexpectedKeys","filter","forEach","assertReducerShape","Math","random","substring","split","finalReducers","finalReducerKeys","shapeAssertionError","state","arguments","hasChanged","nextState","_i","_key","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","apply","bindActionCreators","actionCreators","boundActionCreators","compose","_len","funcs","Array","reduce","a","b","applyMiddleware","_extends","assign","target","source","middlewares","store","chain","_dispatch","middlewareAPI","map","middleware","isCrushed","thunk","createThunkMiddleware","extraArgument","withExtraArgument"],"mappings":"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","file":"entry_main.94301ee8.map","sourceRoot":"../web","sourcesContent":["// a really bad Radiohead joke gone too far\n// https://twitter.com/iamdevloper/status/955787690267455490?lang=en\n\n// it's really just utilities for Promises\n\nexport class Completer<T> {\n  promise: Promise<T>;\n\n  resolve: (value?: T) => void;\n  reject: (err?: any) => void;\n\n  constructor() {\n    this.promise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n    });\n  }\n}\n\nexport function ok<T>(cb: (_: (err?: any, value?: any) => void) => void): Promise<T> {\n  const completer = new Completer<T>();\n\n  cb((err, value) => {\n    if (!!err) {\n      completer.reject(err);\n      return;\n    }\n\n    completer.resolve(value);\n  });\n\n  return completer.promise;\n}\n\n// resolveImmediate function modified from fbjs <3\n\nconst resolvedPromise = Promise.resolve();\n\nfunction throwNext(error) {\n  setTimeout(() => {\n    throw error;\n  }, 0);\n}\n\n/**\n * An alternative to setImmediate based on Promise.\n */\nexport function resolveImmediate(callback: () => any): Promise<void> {\n  return resolvedPromise.then(callback).catch(throwNext);\n}","/*\n* Copyright (c) 2015, Leon Sorokin\n* All rights reserved. (MIT Licensed)\n*\n* RgbQuant.js - an image quantization lib\n*/\n\n(function(){\n\tfunction RgbQuant(opts) {\n\t\topts = opts || {};\n\n\t\t// 1 = by global population, 2 = subregion population threshold\n\t\tthis.method = opts.method || 2;\n\t\t// desired final palette size\n\t\tthis.colors = opts.colors || 256;\n\t\t// # of highest-frequency colors to start with for palette reduction\n\t\tthis.initColors = opts.initColors || 4096;\n\t\t// color-distance threshold for initial reduction pass\n\t\tthis.initDist = opts.initDist || 0.01;\n\t\t// subsequent passes threshold\n\t\tthis.distIncr = opts.distIncr || 0.005;\n\t\t// palette grouping\n\t\tthis.hueGroups = opts.hueGroups || 10;\n\t\tthis.satGroups = opts.satGroups || 10;\n\t\tthis.lumGroups = opts.lumGroups || 10;\n\t\t// if > 0, enables hues stats and min-color retention per group\n\t\tthis.minHueCols = opts.minHueCols || 0;\n\t\t// HueStats instance\n\t\tthis.hueStats = this.minHueCols ? new HueStats(this.hueGroups, this.minHueCols) : null;\n\n\t\t// subregion partitioning box size\n\t\tthis.boxSize = opts.boxSize || [64,64];\n\t\t// number of same pixels required within box for histogram inclusion\n\t\tthis.boxPxls = opts.boxPxls || 2;\n\t\t// palette locked indicator\n\t\tthis.palLocked = false;\n\t\t// palette sort order\n//\t\tthis.sortPal = ['hue-','lum-','sat-'];\n\n\t\t// dithering/error diffusion kernel name\n\t\tthis.dithKern = opts.dithKern || null;\n\t\t// dither serpentine pattern\n\t\tthis.dithSerp = opts.dithSerp || false;\n\t\t// minimum color difference (0-1) needed to dither\n\t\tthis.dithDelta = opts.dithDelta || 0;\n\n\t\t// accumulated histogram\n\t\tthis.histogram = {};\n\t\t// palette - rgb triplets\n\t\tthis.idxrgb = opts.palette ? opts.palette.slice(0) : [];\n\t\t// palette - int32 vals\n\t\tthis.idxi32 = [];\n\t\t// reverse lookup {i32:idx}\n\t\tthis.i32idx = {};\n\t\t// {i32:rgb}\n\t\tthis.i32rgb = {};\n\t\t// enable color caching (also incurs overhead of cache misses and cache building)\n\t\tthis.useCache = opts.useCache !== false;\n\t\t// min color occurance count needed to qualify for caching\n\t\tthis.cacheFreq = opts.cacheFreq || 10;\n\t\t// allows pre-defined palettes to be re-indexed (enabling palette compacting and sorting)\n\t\tthis.reIndex = opts.reIndex || this.idxrgb.length == 0;\n\t\t// selection of color-distance equation\n\t\tthis.colorDist = opts.colorDist == \"manhattan\" ? distManhattan : distEuclidean;\n\n\t\t// if pre-defined palette, build lookups\n\t\tif (this.idxrgb.length > 0) {\n\t\t\tvar self = this;\n\t\t\tthis.idxrgb.forEach(function(rgb, i) {\n\t\t\t\tvar i32 = (\n\t\t\t\t\t(255    << 24) |\t// alpha\n\t\t\t\t\t(rgb[2] << 16) |\t// blue\n\t\t\t\t\t(rgb[1] <<  8) |\t// green\n\t\t\t\t\t rgb[0]\t\t\t\t// red\n\t\t\t\t) >>> 0;\n\n\t\t\t\tself.idxi32[i]\t\t= i32;\n\t\t\t\tself.i32idx[i32]\t= i;\n\t\t\t\tself.i32rgb[i32]\t= rgb;\n\t\t\t});\n\t\t}\n\t}\n\n\t// gathers histogram info\n\tRgbQuant.prototype.sample = function sample(img, width) {\n\t\tif (this.palLocked)\n\t\t\tthrow \"Cannot sample additional images, palette already assembled.\";\n\n\t\tvar data = getImageData(img, width);\n\n\t\tswitch (this.method) {\n\t\t\tcase 1: this.colorStats1D(data.buf32); break;\n\t\t\tcase 2: this.colorStats2D(data.buf32, data.width); break;\n\t\t}\n\t};\n\n\t// image quantizer\n\t// todo: memoize colors here also\n\t// @retType: 1 - Uint8Array (default), 2 - Indexed array, 3 - Match @img type (unimplemented, todo)\n\tRgbQuant.prototype.reduce = function reduce(img, retType, dithKern, dithSerp) {\n\t\tif (!this.palLocked)\n\t\t\tthis.buildPal();\n\n\t\tdithKern = dithKern || this.dithKern;\n\t\tdithSerp = typeof dithSerp != \"undefined\" ? dithSerp : this.dithSerp;\n\n\t\tretType = retType || 1;\n\n\t\t// reduce w/dither\n\t\tif (dithKern)\n\t\t\tvar out32 = this.dither(img, dithKern, dithSerp);\n\t\telse {\n\t\t\tvar data = getImageData(img),\n\t\t\t\tbuf32 = data.buf32,\n\t\t\t\tlen = buf32.length,\n\t\t\t\tout32 = new Uint32Array(len);\n\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tvar i32 = buf32[i];\n\t\t\t\tout32[i] = this.nearestColor(i32);\n\t\t\t}\n\t\t}\n\n\t\tif (retType == 1)\n\t\t\treturn new Uint8Array(out32.buffer);\n\n\t\tif (retType == 2) {\n\t\t\tvar out = [],\n\t\t\t\tlen = out32.length;\n\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tvar i32 = out32[i];\n\t\t\t\tout[i] = this.i32idx[i32];\n\t\t\t}\n\n\t\t\treturn out;\n\t\t}\n\t};\n\n\t// adapted from http://jsbin.com/iXofIji/2/edit by PAEz\n\tRgbQuant.prototype.dither = function(img, kernel, serpentine) {\n\t\t// http://www.tannerhelland.com/4660/dithering-eleven-algorithms-source-code/\n\t\tvar kernels = {\n\t\t\tFloydSteinberg: [\n\t\t\t\t[7 / 16, 1, 0],\n\t\t\t\t[3 / 16, -1, 1],\n\t\t\t\t[5 / 16, 0, 1],\n\t\t\t\t[1 / 16, 1, 1]\n\t\t\t],\n\t\t\tFalseFloydSteinberg: [\n\t\t\t\t[3 / 8, 1, 0],\n\t\t\t\t[3 / 8, 0, 1],\n\t\t\t\t[2 / 8, 1, 1]\n\t\t\t],\n\t\t\tStucki: [\n\t\t\t\t[8 / 42, 1, 0],\n\t\t\t\t[4 / 42, 2, 0],\n\t\t\t\t[2 / 42, -2, 1],\n\t\t\t\t[4 / 42, -1, 1],\n\t\t\t\t[8 / 42, 0, 1],\n\t\t\t\t[4 / 42, 1, 1],\n\t\t\t\t[2 / 42, 2, 1],\n\t\t\t\t[1 / 42, -2, 2],\n\t\t\t\t[2 / 42, -1, 2],\n\t\t\t\t[4 / 42, 0, 2],\n\t\t\t\t[2 / 42, 1, 2],\n\t\t\t\t[1 / 42, 2, 2]\n\t\t\t],\n\t\t\tAtkinson: [\n\t\t\t\t[1 / 8, 1, 0],\n\t\t\t\t[1 / 8, 2, 0],\n\t\t\t\t[1 / 8, -1, 1],\n\t\t\t\t[1 / 8, 0, 1],\n\t\t\t\t[1 / 8, 1, 1],\n\t\t\t\t[1 / 8, 0, 2]\n\t\t\t],\n\t\t\tJarvis: [\t\t\t// Jarvis, Judice, and Ninke / JJN?\n\t\t\t\t[7 / 48, 1, 0],\n\t\t\t\t[5 / 48, 2, 0],\n\t\t\t\t[3 / 48, -2, 1],\n\t\t\t\t[5 / 48, -1, 1],\n\t\t\t\t[7 / 48, 0, 1],\n\t\t\t\t[5 / 48, 1, 1],\n\t\t\t\t[3 / 48, 2, 1],\n\t\t\t\t[1 / 48, -2, 2],\n\t\t\t\t[3 / 48, -1, 2],\n\t\t\t\t[5 / 48, 0, 2],\n\t\t\t\t[3 / 48, 1, 2],\n\t\t\t\t[1 / 48, 2, 2]\n\t\t\t],\n\t\t\tBurkes: [\n\t\t\t\t[8 / 32, 1, 0],\n\t\t\t\t[4 / 32, 2, 0],\n\t\t\t\t[2 / 32, -2, 1],\n\t\t\t\t[4 / 32, -1, 1],\n\t\t\t\t[8 / 32, 0, 1],\n\t\t\t\t[4 / 32, 1, 1],\n\t\t\t\t[2 / 32, 2, 1],\n\t\t\t],\n\t\t\tSierra: [\n\t\t\t\t[5 / 32, 1, 0],\n\t\t\t\t[3 / 32, 2, 0],\n\t\t\t\t[2 / 32, -2, 1],\n\t\t\t\t[4 / 32, -1, 1],\n\t\t\t\t[5 / 32, 0, 1],\n\t\t\t\t[4 / 32, 1, 1],\n\t\t\t\t[2 / 32, 2, 1],\n\t\t\t\t[2 / 32, -1, 2],\n\t\t\t\t[3 / 32, 0, 2],\n\t\t\t\t[2 / 32, 1, 2],\n\t\t\t],\n\t\t\tTwoSierra: [\n\t\t\t\t[4 / 16, 1, 0],\n\t\t\t\t[3 / 16, 2, 0],\n\t\t\t\t[1 / 16, -2, 1],\n\t\t\t\t[2 / 16, -1, 1],\n\t\t\t\t[3 / 16, 0, 1],\n\t\t\t\t[2 / 16, 1, 1],\n\t\t\t\t[1 / 16, 2, 1],\n\t\t\t],\n\t\t\tSierraLite: [\n\t\t\t\t[2 / 4, 1, 0],\n\t\t\t\t[1 / 4, -1, 1],\n\t\t\t\t[1 / 4, 0, 1],\n\t\t\t],\n\t\t};\n\n\t\tif (!kernel || !kernels[kernel]) {\n\t\t\tthrow 'Unknown dithering kernel: ' + kernel;\n\t\t}\n\n\t\tvar ds = kernels[kernel];\n\n\t\tvar data = getImageData(img),\n//\t\t\tbuf8 = data.buf8,\n\t\t\tbuf32 = data.buf32,\n\t\t\twidth = data.width,\n\t\t\theight = data.height,\n\t\t\tlen = buf32.length;\n\n\t\tvar dir = serpentine ? -1 : 1;\n\n\t\tfor (var y = 0; y < height; y++) {\n\t\t\tif (serpentine)\n\t\t\t\tdir = dir * -1;\n\n\t\t\tvar lni = y * width;\n\n\t\t\tfor (var x = (dir == 1 ? 0 : width - 1), xend = (dir == 1 ? width : 0); x !== xend; x += dir) {\n\t\t\t\t// Image pixel\n\t\t\t\tvar idx = lni + x,\n\t\t\t\t\ti32 = buf32[idx],\n\t\t\t\t\tr1 = (i32 & 0xff),\n\t\t\t\t\tg1 = (i32 & 0xff00) >> 8,\n\t\t\t\t\tb1 = (i32 & 0xff0000) >> 16;\n\n\t\t\t\t// Reduced pixel\n\t\t\t\tvar i32x = this.nearestColor(i32),\n\t\t\t\t\tr2 = (i32x & 0xff),\n\t\t\t\t\tg2 = (i32x & 0xff00) >> 8,\n\t\t\t\t\tb2 = (i32x & 0xff0000) >> 16;\n\n\t\t\t\tbuf32[idx] =\n\t\t\t\t\t(255 << 24)\t|\t// alpha\n\t\t\t\t\t(b2  << 16)\t|\t// blue\n\t\t\t\t\t(g2  <<  8)\t|\t// green\n\t\t\t\t\t r2;\n\n\t\t\t\t// dithering strength\n\t\t\t\tif (this.dithDelta) {\n\t\t\t\t\tvar dist = this.colorDist([r1, g1, b1], [r2, g2, b2]);\n\t\t\t\t\tif (dist < this.dithDelta)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Component distance\n\t\t\t\tvar er = r1 - r2,\n\t\t\t\t\teg = g1 - g2,\n\t\t\t\t\teb = b1 - b2;\n\n\t\t\t\tfor (var i = (dir == 1 ? 0 : ds.length - 1), end = (dir == 1 ? ds.length : 0); i !== end; i += dir) {\n\t\t\t\t\tvar x1 = ds[i][1] * dir,\n\t\t\t\t\t\ty1 = ds[i][2];\n\n\t\t\t\t\tvar lni2 = y1 * width;\n\n\t\t\t\t\tif (x1 + x >= 0 && x1 + x < width && y1 + y >= 0 && y1 + y < height) {\n\t\t\t\t\t\tvar d = ds[i][0];\n\t\t\t\t\t\tvar idx2 = idx + (lni2 + x1);\n\n\t\t\t\t\t\tvar r3 = (buf32[idx2] & 0xff),\n\t\t\t\t\t\t\tg3 = (buf32[idx2] & 0xff00) >> 8,\n\t\t\t\t\t\t\tb3 = (buf32[idx2] & 0xff0000) >> 16;\n\n\t\t\t\t\t\tvar r4 = Math.max(0, Math.min(255, r3 + er * d)),\n\t\t\t\t\t\t\tg4 = Math.max(0, Math.min(255, g3 + eg * d)),\n\t\t\t\t\t\t\tb4 = Math.max(0, Math.min(255, b3 + eb * d));\n\n\t\t\t\t\t\tbuf32[idx2] =\n\t\t\t\t\t\t\t(255 << 24)\t|\t// alpha\n\t\t\t\t\t\t\t(b4  << 16)\t|\t// blue\n\t\t\t\t\t\t\t(g4  <<  8)\t|\t// green\n\t\t\t\t\t\t\t r4;\t\t\t// red\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn buf32;\n\t};\n\n\t// reduces histogram to palette, remaps & memoizes reduced colors\n\tRgbQuant.prototype.buildPal = function buildPal(noSort) {\n\t\tif (this.palLocked || this.idxrgb.length > 0 && this.idxrgb.length <= this.colors) return;\n\n\t\tvar histG  = this.histogram,\n\t\t\tsorted = sortedHashKeys(histG, true);\n\n\t\tif (sorted.length == 0)\n\t\t\tthrow \"Nothing has been sampled, palette cannot be built.\";\n\n\t\tswitch (this.method) {\n\t\t\tcase 1:\n\t\t\t\tvar cols = this.initColors,\n\t\t\t\t\tlast = sorted[cols - 1],\n\t\t\t\t\tfreq = histG[last];\n\n\t\t\t\tvar idxi32 = sorted.slice(0, cols);\n\n\t\t\t\t// add any cut off colors with same freq as last\n\t\t\t\tvar pos = cols, len = sorted.length;\n\t\t\t\twhile (pos < len && histG[sorted[pos]] == freq)\n\t\t\t\t\tidxi32.push(sorted[pos++]);\n\n\t\t\t\t// inject min huegroup colors\n\t\t\t\tif (this.hueStats)\n\t\t\t\t\tthis.hueStats.inject(idxi32);\n\n\t\t\t\tbreak;\n\t\t\tcase 2:\n\t\t\t\tvar idxi32 = sorted;\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// int32-ify values\n\t\tidxi32 = idxi32.map(function(v){return +v;});\n\n\t\tthis.reducePal(idxi32);\n\n\t\tif (!noSort && this.reIndex)\n\t\t\tthis.sortPal();\n\n\t\t// build cache of top histogram colors\n\t\tif (this.useCache)\n\t\t\tthis.cacheHistogram(idxi32);\n\n\t\tthis.palLocked = true;\n\t};\n\n\tRgbQuant.prototype.palette = function palette(tuples, noSort) {\n\t\tthis.buildPal(noSort);\n\t\treturn tuples ? this.idxrgb : new Uint8Array((new Uint32Array(this.idxi32)).buffer);\n\t};\n\n\tRgbQuant.prototype.prunePal = function prunePal(keep) {\n\t\tvar i32;\n\n\t\tfor (var j = 0; j < this.idxrgb.length; j++) {\n\t\t\tif (!keep[j]) {\n\t\t\t\ti32 = this.idxi32[j];\n\t\t\t\tthis.idxrgb[j] = null;\n\t\t\t\tthis.idxi32[j] = null;\n\t\t\t\tdelete this.i32idx[i32];\n\t\t\t}\n\t\t}\n\n\t\t// compact\n\t\tif (this.reIndex) {\n\t\t\tvar idxrgb = [],\n\t\t\t\tidxi32 = [],\n\t\t\t\ti32idx = {};\n\n\t\t\tfor (var j = 0, i = 0; j < this.idxrgb.length; j++) {\n\t\t\t\tif (this.idxrgb[j]) {\n\t\t\t\t\ti32 = this.idxi32[j];\n\t\t\t\t\tidxrgb[i] = this.idxrgb[j];\n\t\t\t\t\ti32idx[i32] = i;\n\t\t\t\t\tidxi32[i] = i32;\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.idxrgb = idxrgb;\n\t\t\tthis.idxi32 = idxi32;\n\t\t\tthis.i32idx = i32idx;\n\t\t}\n\t};\n\n\t// reduces similar colors from an importance-sorted Uint32 rgba array\n\tRgbQuant.prototype.reducePal = function reducePal(idxi32) {\n\t\t// if pre-defined palette's length exceeds target\n\t\tif (this.idxrgb.length > this.colors) {\n\t\t\t// quantize histogram to existing palette\n\t\t\tvar len = idxi32.length, keep = {}, uniques = 0, idx, pruned = false;\n\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\t// palette length reached, unset all remaining colors (sparse palette)\n\t\t\t\tif (uniques == this.colors && !pruned) {\n\t\t\t\t\tthis.prunePal(keep);\n\t\t\t\t\tpruned = true;\n\t\t\t\t}\n\n\t\t\t\tidx = this.nearestIndex(idxi32[i]);\n\n\t\t\t\tif (uniques < this.colors && !keep[idx]) {\n\t\t\t\t\tkeep[idx] = true;\n\t\t\t\t\tuniques++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!pruned) {\n\t\t\t\tthis.prunePal(keep);\n\t\t\t\tpruned = true;\n\t\t\t}\n\t\t}\n\t\t// reduce histogram to create initial palette\n\t\telse {\n\t\t\t// build full rgb palette\n\t\t\tvar idxrgb = idxi32.map(function(i32) {\n\t\t\t\treturn [\n\t\t\t\t\t(i32 & 0xff),\n\t\t\t\t\t(i32 & 0xff00) >> 8,\n\t\t\t\t\t(i32 & 0xff0000) >> 16,\n\t\t\t\t];\n\t\t\t});\n\n\t\t\tvar len = idxrgb.length,\n\t\t\t\tpalLen = len,\n\t\t\t\tthold = this.initDist;\n\n\t\t\t// palette already at or below desired length\n\t\t\tif (palLen > this.colors) {\n\t\t\t\twhile (palLen > this.colors) {\n\t\t\t\t\tvar memDist = [];\n\n\t\t\t\t\t// iterate palette\n\t\t\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\t\t\tvar pxi = idxrgb[i], i32i = idxi32[i];\n\t\t\t\t\t\tif (!pxi) continue;\n\n\t\t\t\t\t\tfor (var j = i + 1; j < len; j++) {\n\t\t\t\t\t\t\tvar pxj = idxrgb[j], i32j = idxi32[j];\n\t\t\t\t\t\t\tif (!pxj) continue;\n\n\t\t\t\t\t\t\tvar dist = this.colorDist(pxi, pxj);\n\n\t\t\t\t\t\t\tif (dist < thold) {\n\t\t\t\t\t\t\t\t// store index,rgb,dist\n\t\t\t\t\t\t\t\tmemDist.push([j, pxj, i32j, dist]);\n\n\t\t\t\t\t\t\t\t// kill squashed value\n\t\t\t\t\t\t\t\tdelete(idxrgb[j]);\n\t\t\t\t\t\t\t\tpalLen--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// palette reduction pass\n\t\t\t\t\t// console.log(\"palette length: \" + palLen);\n\n\t\t\t\t\t// if palette is still much larger than target, increment by larger initDist\n\t\t\t\t\tthold += (palLen > this.colors * 3) ? this.initDist : this.distIncr;\n\t\t\t\t}\n\n\t\t\t\t// if palette is over-reduced, re-add removed colors with largest distances from last round\n\t\t\t\tif (palLen < this.colors) {\n\t\t\t\t\t// sort descending\n\t\t\t\t\tsort.call(memDist, function(a,b) {\n\t\t\t\t\t\treturn b[3] - a[3];\n\t\t\t\t\t});\n\n\t\t\t\t\tvar k = 0;\n\t\t\t\t\twhile (palLen < this.colors) {\n\t\t\t\t\t\t// re-inject rgb into final palette\n\t\t\t\t\t\tidxrgb[memDist[k][0]] = memDist[k][1];\n\n\t\t\t\t\t\tpalLen++;\n\t\t\t\t\t\tk++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar len = idxrgb.length;\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tif (!idxrgb[i]) continue;\n\n\t\t\t\tthis.idxrgb.push(idxrgb[i]);\n\t\t\t\tthis.idxi32.push(idxi32[i]);\n\n\t\t\t\tthis.i32idx[idxi32[i]] = this.idxi32.length - 1;\n\t\t\t\tthis.i32rgb[idxi32[i]] = idxrgb[i];\n\t\t\t}\n\t\t}\n\t};\n\n\t// global top-population\n\tRgbQuant.prototype.colorStats1D = function colorStats1D(buf32) {\n\t\tvar histG = this.histogram,\n\t\t\tnum = 0, col,\n\t\t\tlen = buf32.length;\n\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tcol = buf32[i];\n\n\t\t\t// skip transparent\n\t\t\tif ((col & 0xff000000) >> 24 == 0) continue;\n\n\t\t\t// collect hue stats\n\t\t\tif (this.hueStats)\n\t\t\t\tthis.hueStats.check(col);\n\n\t\t\tif (col in histG)\n\t\t\t\thistG[col]++;\n\t\t\telse\n\t\t\t\thistG[col] = 1;\n\t\t}\n\t};\n\n\t// population threshold within subregions\n\t// FIXME: this can over-reduce (few/no colors same?), need a way to keep\n\t// important colors that dont ever reach local thresholds (gradients?)\n\tRgbQuant.prototype.colorStats2D = function colorStats2D(buf32, width) {\n\t\tvar boxW = this.boxSize[0],\n\t\t\tboxH = this.boxSize[1],\n\t\t\tarea = boxW * boxH,\n\t\t\tboxes = makeBoxes(width, buf32.length / width, boxW, boxH),\n\t\t\thistG = this.histogram,\n\t\t\tself = this;\n\n\t\tboxes.forEach(function(box) {\n\t\t\tvar effc = Math.max(Math.round((box.w * box.h) / area) * self.boxPxls, 2),\n\t\t\t\thistL = {}, col;\n\n\t\t\titerBox(box, width, function(i) {\n\t\t\t\tcol = buf32[i];\n\n\t\t\t\t// skip transparent\n\t\t\t\tif ((col & 0xff000000) >> 24 == 0) return;\n\n\t\t\t\t// collect hue stats\n\t\t\t\tif (self.hueStats)\n\t\t\t\t\tself.hueStats.check(col);\n\n\t\t\t\tif (col in histG)\n\t\t\t\t\thistG[col]++;\n\t\t\t\telse if (col in histL) {\n\t\t\t\t\tif (++histL[col] >= effc)\n\t\t\t\t\t\thistG[col] = histL[col];\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\thistL[col] = 1;\n\t\t\t});\n\t\t});\n\n\t\tif (this.hueStats)\n\t\t\tthis.hueStats.inject(histG);\n\t};\n\n\t// TODO: group very low lum and very high lum colors\n\t// TODO: pass custom sort order\n\tRgbQuant.prototype.sortPal = function sortPal() {\n\t\tvar self = this;\n\n\t\tthis.idxi32.sort(function(a,b) {\n\t\t\tvar idxA = self.i32idx[a],\n\t\t\t\tidxB = self.i32idx[b],\n\t\t\t\trgbA = self.idxrgb[idxA],\n\t\t\t\trgbB = self.idxrgb[idxB];\n\n\t\t\tvar hslA = rgb2hsl(rgbA[0],rgbA[1],rgbA[2]),\n\t\t\t\thslB = rgb2hsl(rgbB[0],rgbB[1],rgbB[2]);\n\n\t\t\t// sort all grays + whites together\n\t\t\tvar hueA = (rgbA[0] == rgbA[1] && rgbA[1] == rgbA[2]) ? -1 : hueGroup(hslA.h, self.hueGroups);\n\t\t\tvar hueB = (rgbB[0] == rgbB[1] && rgbB[1] == rgbB[2]) ? -1 : hueGroup(hslB.h, self.hueGroups);\n\n\t\t\tvar hueDiff = hueB - hueA;\n\t\t\tif (hueDiff) return -hueDiff;\n\n\t\t\tvar lumDiff = lumGroup(+hslB.l.toFixed(2)) - lumGroup(+hslA.l.toFixed(2));\n\t\t\tif (lumDiff) return -lumDiff;\n\n\t\t\tvar satDiff = satGroup(+hslB.s.toFixed(2)) - satGroup(+hslA.s.toFixed(2));\n\t\t\tif (satDiff) return -satDiff;\n\t\t});\n\n\t\t// sync idxrgb & i32idx\n\t\tthis.idxi32.forEach(function(i32, i) {\n\t\t\tself.idxrgb[i] = self.i32rgb[i32];\n\t\t\tself.i32idx[i32] = i;\n\t\t});\n\t};\n\n\t// TOTRY: use HUSL - http://boronine.com/husl/\n\tRgbQuant.prototype.nearestColor = function nearestColor(i32) {\n\t\tvar idx = this.nearestIndex(i32);\n\t\treturn idx === null ? 0 : this.idxi32[idx];\n\t};\n\n\t// TOTRY: use HUSL - http://boronine.com/husl/\n\tRgbQuant.prototype.nearestIndex = function nearestIndex(i32) {\n\t\t// alpha 0 returns null index\n\t\tif ((i32 & 0xff000000) >> 24 == 0)\n\t\t\treturn null;\n\n\t\tif (this.useCache && (\"\"+i32) in this.i32idx)\n\t\t\treturn this.i32idx[i32];\n\n\t\tvar min = 1000,\n\t\t\tidx,\n\t\t\trgb = [\n\t\t\t\t(i32 & 0xff),\n\t\t\t\t(i32 & 0xff00) >> 8,\n\t\t\t\t(i32 & 0xff0000) >> 16,\n\t\t\t],\n\t\t\tlen = this.idxrgb.length;\n\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tif (!this.idxrgb[i]) continue;\t\t// sparse palettes\n\n\t\t\tvar dist = this.colorDist(rgb, this.idxrgb[i]);\n\n\t\t\tif (dist < min) {\n\t\t\t\tmin = dist;\n\t\t\t\tidx = i;\n\t\t\t}\n\t\t}\n\n\t\treturn idx;\n\t};\n\n\tRgbQuant.prototype.cacheHistogram = function cacheHistogram(idxi32) {\n\t\tfor (var i = 0, i32 = idxi32[i]; i < idxi32.length && this.histogram[i32] >= this.cacheFreq; i32 = idxi32[i++])\n\t\t\tthis.i32idx[i32] = this.nearestIndex(i32);\n\t};\n\n\tfunction HueStats(numGroups, minCols) {\n\t\tthis.numGroups = numGroups;\n\t\tthis.minCols = minCols;\n\t\tthis.stats = {};\n\n\t\tfor (var i = -1; i < numGroups; i++)\n\t\t\tthis.stats[i] = {num: 0, cols: []};\n\n\t\tthis.groupsFull = 0;\n\t}\n\n\tHueStats.prototype.check = function checkHue(i32) {\n\t\tif (this.groupsFull == this.numGroups + 1)\n\t\t\tthis.check = function() {return;};\n\n\t\tvar r = (i32 & 0xff),\n\t\t\tg = (i32 & 0xff00) >> 8,\n\t\t\tb = (i32 & 0xff0000) >> 16,\n\t\t\thg = (r == g && g == b) ? -1 : hueGroup(rgb2hsl(r,g,b).h, this.numGroups),\n\t\t\tgr = this.stats[hg],\n\t\t\tmin = this.minCols;\n\n\t\tgr.num++;\n\n\t\tif (gr.num > min)\n\t\t\treturn;\n\t\tif (gr.num == min)\n\t\t\tthis.groupsFull++;\n\n\t\tif (gr.num <= min)\n\t\t\tthis.stats[hg].cols.push(i32);\n\t};\n\n\tHueStats.prototype.inject = function injectHues(histG) {\n\t\tfor (var i = -1; i < this.numGroups; i++) {\n\t\t\tif (this.stats[i].num <= this.minCols) {\n\t\t\t\tswitch (typeOf(histG)) {\n\t\t\t\t\tcase \"Array\":\n\t\t\t\t\t\tthis.stats[i].cols.forEach(function(col){\n\t\t\t\t\t\t\tif (histG.indexOf(col) == -1)\n\t\t\t\t\t\t\t\thistG.push(col);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"Object\":\n\t\t\t\t\t\tthis.stats[i].cols.forEach(function(col){\n\t\t\t\t\t\t\tif (!histG[col])\n\t\t\t\t\t\t\t\thistG[col] = 1;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\thistG[col]++;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// Rec. 709 (sRGB) luma coef\n\tvar Pr = .2126,\n\t\tPg = .7152,\n\t\tPb = .0722;\n\n\t// http://alienryderflex.com/hsp.html\n\tfunction rgb2lum(r,g,b) {\n\t\treturn Math.sqrt(\n\t\t\tPr * r*r +\n\t\t\tPg * g*g +\n\t\t\tPb * b*b\n\t\t);\n\t}\n\n\tvar rd = 255,\n\t\tgd = 255,\n\t\tbd = 255;\n\n\tvar euclMax = Math.sqrt(Pr*rd*rd + Pg*gd*gd + Pb*bd*bd);\n\t// perceptual Euclidean color distance\n\tfunction distEuclidean(rgb0, rgb1) {\n\t\tvar rd = rgb1[0]-rgb0[0],\n\t\t\tgd = rgb1[1]-rgb0[1],\n\t\t\tbd = rgb1[2]-rgb0[2];\n\n\t\treturn Math.sqrt(Pr*rd*rd + Pg*gd*gd + Pb*bd*bd) / euclMax;\n\t}\n\n\tvar manhMax = Pr*rd + Pg*gd + Pb*bd;\n\t// perceptual Manhattan color distance\n\tfunction distManhattan(rgb0, rgb1) {\n\t\tvar rd = Math.abs(rgb1[0]-rgb0[0]),\n\t\t\tgd = Math.abs(rgb1[1]-rgb0[1]),\n\t\t\tbd = Math.abs(rgb1[2]-rgb0[2]);\n\n\t\treturn (Pr*rd + Pg*gd + Pb*bd) / manhMax;\n\t}\n\n\t// http://rgb2hsl.nichabi.com/javascript-function.php\n\tfunction rgb2hsl(r, g, b) {\n\t\tvar max, min, h, s, l, d;\n\t\tr /= 255;\n\t\tg /= 255;\n\t\tb /= 255;\n\t\tmax = Math.max(r, g, b);\n\t\tmin = Math.min(r, g, b);\n\t\tl = (max + min) / 2;\n\t\tif (max == min) {\n\t\t\th = s = 0;\n\t\t} else {\n\t\t\td = max - min;\n\t\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\t\tswitch (max) {\n\t\t\t\tcase r: h = (g - b) / d + (g < b ? 6 : 0); break;\n\t\t\t\tcase g:\th = (b - r) / d + 2; break;\n\t\t\t\tcase b:\th = (r - g) / d + 4; break\n\t\t\t}\n\t\t\th /= 6;\n\t\t}\n//\t\th = Math.floor(h * 360)\n//\t\ts = Math.floor(s * 100)\n//\t\tl = Math.floor(l * 100)\n\t\treturn {\n\t\t\th: h,\n\t\t\ts: s,\n\t\t\tl: rgb2lum(r,g,b),\n\t\t};\n\t}\n\n\tfunction hueGroup(hue, segs) {\n\t\tvar seg = 1/segs,\n\t\t\thaf = seg/2;\n\n\t\tif (hue >= 1 - haf || hue <= haf)\n\t\t\treturn 0;\n\n\t\tfor (var i = 1; i < segs; i++) {\n\t\t\tvar mid = i*seg;\n\t\t\tif (hue >= mid - haf && hue <= mid + haf)\n\t\t\t\treturn i;\n\t\t}\n\t}\n\n\tfunction satGroup(sat) {\n\t\treturn sat;\n\t}\n\n\tfunction lumGroup(lum) {\n\t\treturn lum;\n\t}\n\n\tfunction typeOf(val) {\n\t\treturn Object.prototype.toString.call(val).slice(8,-1);\n\t}\n\n\tvar sort = isArrSortStable() ? Array.prototype.sort : stableSort;\n\n\t// must be used via stableSort.call(arr, fn)\n\tfunction stableSort(fn) {\n\t\tvar type = typeOf(this[0]);\n\n\t\tif (type == \"Number\" || type == \"String\") {\n\t\t\tvar ord = {}, len = this.length, val;\n\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tval = this[i];\n\t\t\t\tif (ord[val] || ord[val] === 0) continue;\n\t\t\t\tord[val] = i;\n\t\t\t}\n\n\t\t\treturn this.sort(function(a,b) {\n\t\t\t\treturn fn(a,b) || ord[a] - ord[b];\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tvar ord = this.map(function(v){return v});\n\n\t\t\treturn this.sort(function(a,b) {\n\t\t\t\treturn fn(a,b) || ord.indexOf(a) - ord.indexOf(b);\n\t\t\t});\n\t\t}\n\t}\n\n\t// test if js engine's Array#sort implementation is stable\n\tfunction isArrSortStable() {\n\t\tvar str = \"abcdefghijklmnopqrstuvwxyz\";\n\n\t\treturn \"xyzvwtursopqmnklhijfgdeabc\" == str.split(\"\").sort(function(a,b) {\n\t\t\treturn ~~(str.indexOf(b)/2.3) - ~~(str.indexOf(a)/2.3);\n\t\t}).join(\"\");\n\t}\n\n\t// returns uniform pixel data from various img\n\t// TODO?: if array is passed, createimagedata, createlement canvas? take a pxlen?\n\tfunction getImageData(img, width) {\n\t\tvar can, ctx, imgd, buf8, buf32, height;\n\n\t\tswitch (typeOf(img)) {\n\t\t\tcase \"HTMLImageElement\":\n\t\t\t\tcan = document.createElement(\"canvas\");\n\t\t\t\tcan.width = img.naturalWidth;\n\t\t\t\tcan.height = img.naturalHeight;\n\t\t\t\tctx = can.getContext(\"2d\");\n\t\t\t\tctx.drawImage(img,0,0);\n\t\t\tcase \"Canvas\":\n\t\t\tcase \"HTMLCanvasElement\":\n\t\t\t\tcan = can || img;\n\t\t\t\tctx = ctx || can.getContext(\"2d\");\n\t\t\tcase \"CanvasRenderingContext2D\":\n\t\t\t\tctx = ctx || img;\n\t\t\t\tcan = can || ctx.canvas;\n\t\t\t\timgd = ctx.getImageData(0, 0, can.width, can.height);\n\t\t\tcase \"ImageData\":\n\t\t\t\timgd = imgd || img;\n\t\t\t\twidth = imgd.width;\n\t\t\t\tif (typeOf(imgd.data) == \"CanvasPixelArray\")\n\t\t\t\t\tbuf8 = new Uint8Array(imgd.data);\n\t\t\t\telse\n\t\t\t\t\tbuf8 = imgd.data;\n\t\t\tcase \"Array\":\n\t\t\tcase \"CanvasPixelArray\":\n\t\t\t\tbuf8 = buf8 || new Uint8Array(img);\n\t\t\tcase \"Uint8Array\":\n\t\t\tcase \"Uint8ClampedArray\":\n\t\t\t\tbuf8 = buf8 || img;\n\t\t\t\tbuf32 = new Uint32Array(buf8.buffer);\n\t\t\tcase \"Uint32Array\":\n\t\t\t\tbuf32 = buf32 || img;\n\t\t\t\tbuf8 = buf8 || new Uint8Array(buf32.buffer);\n\t\t\t\twidth = width || buf32.length;\n\t\t\t\theight = buf32.length / width;\n\t\t}\n\n\t\treturn {\n\t\t\tcan: can,\n\t\t\tctx: ctx,\n\t\t\timgd: imgd,\n\t\t\tbuf8: buf8,\n\t\t\tbuf32: buf32,\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t};\n\t}\n\n\t// partitions a rect of wid x hgt into\n\t// array of bboxes of w0 x h0 (or less)\n\tfunction makeBoxes(wid, hgt, w0, h0) {\n\t\tvar wnum = ~~(wid/w0), wrem = wid%w0,\n\t\t\thnum = ~~(hgt/h0), hrem = hgt%h0,\n\t\t\txend = wid-wrem, yend = hgt-hrem;\n\n\t\tvar bxs = [];\n\t\tfor (var y = 0; y < hgt; y += h0)\n\t\t\tfor (var x = 0; x < wid; x += w0)\n\t\t\t\tbxs.push({x:x, y:y, w:(x==xend?wrem:w0), h:(y==yend?hrem:h0)});\n\n\t\treturn bxs;\n\t}\n\n\t// iterates @bbox within a parent rect of width @wid; calls @fn, passing index within parent\n\tfunction iterBox(bbox, wid, fn) {\n\t\tvar b = bbox,\n\t\t\ti0 = b.y * wid + b.x,\n\t\t\ti1 = (b.y + b.h - 1) * wid + (b.x + b.w - 1),\n\t\t\tcnt = 0, incr = wid - b.w + 1, i = i0;\n\n\t\tdo {\n\t\t\tfn.call(this, i);\n\t\t\ti += (++cnt % b.w == 0) ? incr : 1;\n\t\t} while (i <= i1);\n\t}\n\n\t// returns array of hash keys sorted by their values\n\tfunction sortedHashKeys(obj, desc) {\n\t\tvar keys = [];\n\n\t\tfor (var key in obj)\n\t\t\tkeys.push(key);\n\n\t\treturn sort.call(keys, function(a,b) {\n\t\t\treturn desc ? obj[b] - obj[a] : obj[a] - obj[b];\n\t\t});\n\t}\n\n\t// expose\n\tthis.RgbQuant = RgbQuant;\n\n\t// expose to commonJS\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = RgbQuant;\n\t}\n\n}).call(this);","// types\n\nexport interface T_Color extends Array<number> {\n  0: number;\n  1: number;\n  2: number;\n  offset?: number;\n}\n\n// functions\n\nexport function rgbToHsl(rgb: T_Color): T_Color {\n  let [r, g, b] = rgb;\n\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n\n  let h = 0;\n  let s;\n  const l = (max + min) / 2;\n\n  if (max === min) {\n    h = s = 0;\n  } else {\n    const d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n    h /= 6;\n  }\n\n  return [h, s, l];\n}\n\nexport function hslToRgb(hsl: T_Color): T_Color {\n  let [h, s, l] = hsl;\n\n  let r;\n  let g;\n  let b;\n\n  const hue2rgb = function (p: number, q: number, t: number): number {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  };\n\n  if (s === 0) {\n    r = g = b = l;\n  } else {\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n    r = hue2rgb(p, q, h + 1 / 3);\n    g = hue2rgb(p, q, h);\n    b = hue2rgb(p, q, h - 1 / 3);\n  }\n  return [r * 255, g * 255, b * 255];\n}\n\n// classes\n\nexport class Swatch {\n  yiq: number;\n  rgb: T_Color;\n  population: number;\n  hsl?: T_Color;\n\n  constructor(rgb: T_Color, population: number) {\n    this.yiq = 0;\n    this.rgb = [\n      Math.round(rgb[0]),\n      Math.round(rgb[1]),\n      Math.round(rgb[2])\n    ];\n    \n    this.population = population || 1;\n  }\n\n  getHsl(): T_Color {\n    return this.hsl || (this.hsl = rgbToHsl(this.rgb));\n  }\n\n  getPopulation(): number {\n    return this.population;\n  }\n\n  getRgb(): T_Color {\n    return this.rgb;\n  }\n\n  getHex(): string {\n    return `#${(\n      (1 << 24) +\n      (this.rgb[0] << 16) +\n      (this.rgb[1] << 8) +\n      this.rgb[2]\n    )\n      .toString(16)\n      .slice(1, 7)}`;\n  }\n\n  getTitleTextColor(): string {\n    this._ensureTextColors();\n    if (this.yiq < 186) {\n      return \"#fff\";\n    } else {\n      return \"#000\";\n    }\n  }\n\n  getBodyTextColor(): string {\n    this._ensureTextColors();\n    if (this.yiq < 150) {\n      return \"#fff\";\n    } else {\n      return \"#000\";\n    }\n  }\n\n  _ensureTextColors(): number {\n    return (\n      this.yiq ||\n      (this.yiq = (this.rgb[0] * 299 + this.rgb[1] * 587 + this.rgb[2] * 114) / 1000)\n    );\n  }\n}\n\n/*\n  CanvasImage Class\n  Class that wraps the html image element and canvas.\n  It also simplifies some of the canvas context manipulation\n  with a set of helper functions.\n  Stolen from https://github.com/lokesh/color-thief\n*/\nexport class CanvasImage {\n  canvas: HTMLCanvasElement;\n  context: CanvasRenderingContext2D;\n\n  width: number;\n  height: number;\n\n  constructor(image: HTMLImageElement) {\n    this.canvas = document.createElement(\"canvas\");\n    this.context = this.canvas.getContext(\"2d\")!;\n\n    document.body.appendChild(this.canvas);\n\n    this.width = this.canvas.width = image.width;\n    this.height = this.canvas.height = image.height;\n\n    this.context.drawImage(image, 0, 0, this.width, this.height);\n  }\n\n  clear() {\n    return this.context.clearRect(0, 0, this.width, this.height);\n  }\n\n  getPixelCount(): number {\n    return this.width * this.height;\n  }\n\n  getImageData(): ImageData {\n    return this.context.getImageData(0, 0, this.width, this.height);\n  }\n\n  toDataUrl(): string {\n    return this.canvas.toDataURL(\"image/webp\", 0.92);\n  }\n\n  cleanup(): HTMLCanvasElement | null {\n    if (!this.canvas.parentNode) {\n      return null;\n    }\n    return this.canvas.parentNode.removeChild(this.canvas);\n  }\n}","// @ts-ignore\nimport RgbQuant from \"rgbquant\";\n\nimport { Swatch, CanvasImage, hslToRgb, rgbToHsl } from \"./structs\";\n\nconst TARGET_DARK_LUMA = 0.26;\nconst MAX_DARK_LUMA = 0.45;\nconst MIN_LIGHT_LUMA = 0.55;\nconst TARGET_LIGHT_LUMA = 0.74;\n\nconst MIN_NORMAL_LUMA = 0.3;\nconst TARGET_NORMAL_LUMA = 0.5;\nconst MAX_NORMAL_LUMA = 0.7;\n\nconst TARGET_MUTED_SATURATION = 0.3;\nconst MAX_MUTED_SATURATION = 0.4;\n\nconst TARGET_VIBRANT_SATURATION = 1;\nconst MIN_VIBRANT_SATURATION = 0.35;\n\nconst WEIGHT_SATURATION = 3;\nconst WEIGHT_LUMA = 6;\nconst WEIGHT_POPULATION = 1;\n\ninterface I_Definition {\n  name: string;\n  luma: {\n    target: number;\n    min: number;\n    max: number;\n  }\n  sat: {\n    target: number;\n    min: number;\n    max: number;\n  }\n}\n\nconst DEFINITIONS: I_Definition[] = [\n  {\n    name: \"Vibrant\",\n    luma: {\n      target: TARGET_NORMAL_LUMA,\n      min: MIN_NORMAL_LUMA,\n      max: MAX_NORMAL_LUMA\n    },\n    sat: {\n      target: TARGET_VIBRANT_SATURATION,\n      min: MIN_VIBRANT_SATURATION,\n      max: 1\n    }\n  },\n  {\n    name: \"LightVibrant\",\n    luma: {\n      target: TARGET_LIGHT_LUMA,\n      min: MIN_LIGHT_LUMA,\n      max: 1\n    },\n    sat: {\n      target: TARGET_VIBRANT_SATURATION,\n      min: MIN_VIBRANT_SATURATION,\n      max: 1\n    }\n  },\n  {\n    name: \"DarkVibrant\",\n    luma: {\n      target: TARGET_DARK_LUMA,\n      min: 0,\n      max: MAX_DARK_LUMA\n    },\n    sat: {\n      target: TARGET_VIBRANT_SATURATION,\n      min: MIN_VIBRANT_SATURATION,\n      max: 1\n    }\n  },\n  {\n    name: \"Muted\",\n    luma: {\n      target: TARGET_NORMAL_LUMA,\n      min: MIN_NORMAL_LUMA,\n      max: MAX_NORMAL_LUMA\n    },\n    sat: {\n      target: TARGET_MUTED_SATURATION,\n      min: 0,\n      max: MAX_MUTED_SATURATION\n    }\n  },\n  {\n    name: \"LightMuted\",\n    luma: {\n      target: TARGET_LIGHT_LUMA,\n      min: MIN_LIGHT_LUMA,\n      max: 1\n    },\n    sat: {\n      target: TARGET_MUTED_SATURATION,\n      min: 0,\n      max: MAX_MUTED_SATURATION\n    }\n  },\n  {\n    name: \"DarkMuted\",\n    luma: {\n      target: TARGET_DARK_LUMA,\n      min: 0,\n      max: MAX_DARK_LUMA\n    },\n    sat: {\n      target: TARGET_MUTED_SATURATION,\n      min: 0,\n      max: MAX_MUTED_SATURATION\n    }\n  }\n];\n\nexport default class Palette {\n  _swatches: Swatch[];\n\n  maxPopulation: number;\n  image?: CanvasImage;\n\n  constructor(sourceImage: HTMLImageElement, colorCount?: number, quality?: number) {\n    colorCount = colorCount || 16;\n    quality = quality || 5;\n\n    this._swatches = [];\n\n    const image = new CanvasImage(sourceImage);\n    try {\n      const imageData = image.getImageData();\n      const pixels = imageData.data;\n      const pixelCount = image.getPixelCount();\n\n      const allPixels = [];\n      let i = 0;\n      while (i < pixelCount) {\n        const offset = i * 4;\n        const r = pixels[offset + 0];\n        const g = pixels[offset + 1];\n        const b = pixels[offset + 2];\n        const a = pixels[offset + 3];\n        // If pixel is mostly opaque and not white\n        if (a >= 125) {\n          if (!(r > 250 && g > 250 && b > 250)) {\n            allPixels.push([r, g, b]);\n          }\n        }\n        i = i + quality;\n      }\n\n      const q = new RgbQuant({colors: colorCount});\n      q.sample(imageData);\n\n      const palette = q.palette(true, true);\n\n      this._swatches = palette.map((rgb, i) => new Swatch(rgb, palette.length - i));\n      this.maxPopulation = this.findMaxPopulation();\n      // Clean up\n    } catch(e) {\n      console.log(e);\n    } finally {\n      this.image = image;\n    }\n  }\n\n  swatches(swatchArr: string[]) {\n    return this.findSwatches(DEFINITIONS.filter(def => swatchArr.includes(def.name)));\n  }\n\n  findSwatches(definitions: I_Definition[]): {[key: string]: Swatch} {\n    const swatches: Swatch[] = [];\n    const returnObj: {[key: string]: Swatch} = {};\n\n    definitions.forEach(def => {\n      let max: Swatch;\n      let maxValue = 0;\n\n      this._swatches.forEach(swatch => {\n        const [_, sat, luma] = swatch.getHsl();\n\n        if (\n          luma >= def.luma.min &&\n          luma <= def.luma.max &&\n          sat >= def.sat.min &&\n          sat <= def.sat.max &&\n          !swatches.includes(swatch)\n        ) {\n          const value = this.createComparisonValue(\n            def,\n            sat,\n            luma,\n            swatch.getPopulation(),\n            this.maxPopulation\n          );\n\n          if (max === undefined || value > maxValue) {\n            max = swatch;\n            maxValue = value;\n          }\n        }\n      });\n\n      swatches.push(max!);\n      returnObj[def.name] = max!;\n    });\n\n    if (!returnObj.Vibrant && returnObj.DarkVibrant) {\n      // If we do not have a vibrant color...\n      // ...but we do have a dark vibrant, generate the value by modifying the luma\n      const hsl = returnObj.DarkVibrant.getHsl();\n      hsl[2] = TARGET_NORMAL_LUMA;\n      returnObj.Vibrant = new Swatch(hslToRgb([hsl[0], hsl[1], hsl[2]]), 0);\n    }\n\n    // hack for if there is neither DarkVibrant or Vibrant\n    if (!returnObj.Vibrant && returnObj.Muted) {\n      const hsl = returnObj.Muted.getHsl();\n      hsl[1] = TARGET_VIBRANT_SATURATION;\n      returnObj.Vibrant = new Swatch(hslToRgb([hsl[0], hsl[1], hsl[2]]), 0);\n    }\n\n    if (!returnObj.DarkVibrant && returnObj.Vibrant) {\n      // If we do not have a vibrant color...\n      // ...but we do have a dark vibrant, generate the value by modifying the luma\n      const hsl = returnObj.Vibrant.getHsl();\n      hsl[2] = TARGET_DARK_LUMA;\n      returnObj.DarkVibrant = new Swatch(hslToRgb([hsl[0], hsl[1], hsl[2]]), 0);\n    }\n\n    return returnObj;\n  }\n\n  findMaxPopulation(): number {\n    let population = 0;\n    this._swatches.forEach(swatch => {\n      population = Math.max(population, swatch.getPopulation());\n    });\n    return population;\n  }\n\n  createComparisonValue(def: I_Definition, saturation: number, luma: number, population: number, maxPopulation: number): number {\n    return this.weightedMean([\n      this.invertDiff(saturation, def.sat.target),\n      WEIGHT_SATURATION,\n      this.invertDiff(luma, def.luma.target),\n      WEIGHT_LUMA,\n      population / maxPopulation,\n      WEIGHT_POPULATION\n    ]);\n  }\n\n  invertDiff(value: number, targetValue: number): number {\n    return 1 - Math.abs(value - targetValue);\n  }\n\n  weightedMean(values: number[]): number {\n    let sum = 0;\n    let sumWeight = 0;\n    let i = 0;\n    while (i < values.length) {\n      const value = values[i];\n      const weight = values[i + 1];\n      sum += value * weight;\n      sumWeight += weight;\n      i += 2;\n    }\n    return sum / sumWeight;\n  }\n}","import { Completer, resolveImmediate } from \"../util/okComputer\";\n\nimport Palette from \"./Palette\";\nimport { T_Color } from \"./structs\";\n\n// TODO: navigator.onLine\nexport default class BackgroundImage {\n  dataUrl: string;\n\n  vibrant: T_Color;\n  muted: T_Color;\n  darkVibrant: T_Color;\n\n  static fetch(): Promise<BackgroundImage> {\n    const completer = new Completer<BackgroundImage>();\n\n    const img = document.createElement(\"img\");\n    img.crossOrigin = \"Anonymous\";\n    img.src = \"https://source.unsplash.com/random/1600x900\";\n    \n    img.addEventListener(\"load\", _ => {\n      resolveImmediate(() => {\n        const prof = Date.now();\n    \n        const vibrantObj = new Palette(img);\n        const swatches = vibrantObj.swatches([\"Vibrant\", \"Muted\", \"DarkVibrant\"]);\n  \n        console.log(Date.now() - prof);\n        const bg: BackgroundImage = new BackgroundImage();\n\n        bg.vibrant = swatches.Vibrant.getRgb();\n        bg.muted = swatches.Muted.getRgb();       \n        bg.darkVibrant = swatches.DarkVibrant.getRgb();\n  \n        try {\n          bg.dataUrl = vibrantObj.image!.toDataUrl();\n  \n          console.log(\"fetch complete\"); \n          completer.resolve(bg);\n        } catch(e) {\n          completer.reject(e);\n        } finally {\n          vibrantObj.image!.cleanup();\n        }\n      });\n    });\n\n    return completer.promise;\n  }\n\n  getTextColor(): string {\n    const brightness = this.getBrightness(this.vibrant);\n    const textColor = brightness > 0 ? \"#000\" : \"#fff\";\n\n    return textColor;\n  }\n\n  getGradientColors(): [string, string] {\n    return [\n      this.toCss(this.vibrant),\n      this.toCss(this.muted)\n    ];\n  }\n\n  getShadowColors(): [string, string] {\n    const brightness = this.getBrightness(this.darkVibrant);\n    const swatch = brightness > 0 ?\n        this.darken(this.darkVibrant, 0.4) :\n        this.darkVibrant;\n\n    return [\n      this.toCssAlpha(swatch, 0.3),\n      this.toCssAlpha(swatch, 0.2)\n    ];\n  }\n\n  // css helpers\n\n  toCss(rgb: T_Color): string {\n    const [ r, g, b ] = rgb;\n    return `rgb(${r}, ${g}, ${b})`;\n  }\n  \n  toCssAlpha(rgb: T_Color, a: number): string {\n    const [ r, g, b ] = rgb;\n    return `rgba(${r}, ${g}, ${b}, ${a})`;\n  }\n  \n  // color helpers\n  \n  getBrightness(swatch: T_Color): number {\n    const BRIGHTNESS_THRESHOLD = 235;\n    const [r, g, b] = swatch;\n    \n    return (0.299*r + 0.587*g + 0.114*b) - BRIGHTNESS_THRESHOLD;\n  }\n  \n  darken(s: T_Color, percent: number): T_Color {\n    return [\n      s[0] - s[0] * percent,\n      s[1] - s[1] * percent,\n      s[2] - s[2] * percent\n    ];\n  }\n}","export function digitToString(time: number): string {\n  return time > 9 ? time.toString() : `0${time}`;\n}\n\nexport function timeFromDate(date: Date): [string, string] {\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n\n  return [\n    digitToString(hours),\n    digitToString(minutes)\n  ];\n}\n\nexport function everySecond(callback: Function): Function {\n  let cancelled = false;\n  let lastTime = 0;  \n  function timeLoop(now: number) {\n    if (now - lastTime > 1000) {\n      lastTime = now;\n      callback();\n\n      if (cancelled) {\n        return;\n      }\n    }\n\n    requestAnimationFrame(timeLoop);\n  }\n\n  requestAnimationFrame(timeLoop);  \n  return () => (cancelled = true);  \n}\n\nexport function everyMinute(callback: Function): Function {\n  let cancelled = false;  \n  function timeLoop(duration: number) {\n    setTimeout(_ => {\n      callback();\n\n      if (cancelled) {\n        return;\n      }\n\n      const date = new Date(Date.now());\n      timeLoop((60 - date.getSeconds()) * 1000);\n    }, duration);\n  }\n\n  timeLoop(0);\n  return () => (cancelled = true);\n}","\nimport { SmartObject } from \"./util/smartObjects\";\n\nexport interface Action {\n  type: ActionType\n}\n\nexport enum ActionType {\n  INITIAL,\n  // time\n  TICK_EVERY_SECOND,\n  TICK_EVERY_MINUTE,\n  END_TICK_EVERY_SECOND,\n  END_TICK_EVERY_MINUTE,\n  // background\n  UPDATE_BACKGROUND\n}\n\nexport interface _Time {\n  hours?: string;\n  minutes?: string;\n  isEveryOtherTick?: boolean;\n}\n\nexport interface _Background {\n  dataUrl?: string;\n  gradient?: [string, string];\n  shadows?: [string, string];\n  textColor?: string;\n  preload?: boolean;\n}\n\nexport interface State {\n  time: SmartObject & _Time,\n  background: SmartObject & _Background\n}","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n","export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\t\t\tresult = Symbol('observable');\n\t\t\tSymbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n","/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n","import isPlainObject from 'lodash-es/isPlainObject';\nimport $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nexport var ActionTypes = {\n  INIT: '@@redux/INIT'\n\n  /**\n   * Creates a Redux store that holds the state tree.\n   * The only way to change the data in the store is to call `dispatch()` on it.\n   *\n   * There should only be a single store in your app. To specify how different\n   * parts of the state tree respond to actions, you may combine several reducers\n   * into a single reducer function by using `combineReducers`.\n   *\n   * @param {Function} reducer A function that returns the next state tree, given\n   * the current state tree and the action to handle.\n   *\n   * @param {any} [preloadedState] The initial state. You may optionally specify it\n   * to hydrate the state from the server in universal apps, or to restore a\n   * previously serialized user session.\n   * If you use `combineReducers` to produce the root reducer function, this must be\n   * an object with the same shape as `combineReducers` keys.\n   *\n   * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n   * to enhance the store with third-party capabilities such as middleware,\n   * time travel, persistence, etc. The only store enhancer that ships with Redux\n   * is `applyMiddleware()`.\n   *\n   * @returns {Store} A Redux store that lets you read the state, dispatch actions\n   * and subscribe to changes.\n   */\n};export default function createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.INIT });\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object') {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}","/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nexport default function warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n}","import { ActionTypes } from './createStore';\nimport isPlainObject from 'lodash-es/isPlainObject';\nimport warning from './utils/warning';\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\n  return 'Given action ' + actionName + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, { type: ActionTypes.INIT });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nexport default function combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning('No reducer provided for key \"' + key + '\"');\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  var unexpectedKeyCache = void 0;\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError = void 0;\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments[1];\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}","function bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(undefined, arguments));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nexport default function bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}","/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nexport default function compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(undefined, arguments));\n    };\n  });\n}","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport compose from './compose';\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nexport default function applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, preloadedState, enhancer) {\n      var store = createStore(reducer, preloadedState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}","import createStore from './createStore';\nimport combineReducers from './combineReducers';\nimport bindActionCreators from './bindActionCreators';\nimport applyMiddleware from './applyMiddleware';\nimport compose from './compose';\nimport warning from './utils/warning';\n\n/*\n* This is a dummy function to check if the function name has been altered by minification.\n* If the function has been minified and NODE_ENV !== 'production', warn the user.\n*/\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { createStore, combineReducers, bindActionCreators, applyMiddleware, compose };","import BackgroundImage from \"../graphics/BackgroundImage\";\nimport { everySecond, everyMinute } from \"./util/time\";\n\nimport { Action, ActionType } from \"./structs\";\n\nimport { Store, bindActionCreators } from \"redux\";\n\nlet _everySecond = false;\nlet _everyMinute = false;\n\nexport const actionTypes = {\n  // time/tick thunks\n  tickEverySecond() {\n    _everySecond = true;\n    return dispatch => {\n      const cancel = everySecond(() => {\n        if (!_everySecond) {\n          cancel();\n          return;\n        }\n\n        dispatch(<Action>{ type: ActionType.TICK_EVERY_SECOND });\n      });\n\n      dispatch(<Action>{ type: ActionType.TICK_EVERY_SECOND });\n    };\n  },\n  tickEveryMinute() {\n    _everyMinute = true;\n    return dispatch => {\n      const cancel = everyMinute(() => {\n        if (!_everyMinute) {\n          cancel();\n          return;\n        }\n\n        dispatch(<Action>{ type: ActionType.TICK_EVERY_MINUTE });\n      });\n\n      dispatch(<Action>{ type: ActionType.TICK_EVERY_MINUTE });\n    };\n  },\n  endTickEverySecond() {\n    _everySecond = false;\n    return <Action>{\n      type: ActionType.END_TICK_EVERY_SECOND\n    };\n  },\n  endTickEveryMinute() {\n    _everyMinute = false;\n    return <Action>{\n      type: ActionType.END_TICK_EVERY_MINUTE\n    };\n  },\n  // background thunk\n  fetchBackground(preload?: boolean) {\n    return async dispatch => {\n      const bg: BackgroundImage = await BackgroundImage.fetch();\n\n      await dispatch(actionTypes.updateBackground(bg, preload));\n    };\n  },\n  // background action creators\n  updateBackground(bg: BackgroundImage, preload?: boolean) {\n    return <Action>{\n      type: ActionType.UPDATE_BACKGROUND,\n      dataUrl: bg.dataUrl,\n      gradient: bg.getGradientColors(),\n      shadows: bg.getShadowColors(),\n      textColor: bg.getTextColor(),\n      preload: !!preload\n    }\n  }\n};\n\nexport function createActionCreators(store: Store<any>) {\n  return bindActionCreators(actionTypes, store.dispatch.bind(store));\n};","import { State } from \"../structs\";\n\nconst SMART_OBJECT: symbol = Symbol.for(\"smart_object\");\nconst SMART_OBJECT_CHANGED: symbol = Symbol.for(\"smart_object_changed\");\nconst SMART_OBJECT_CACHE: symbol = Symbol.for(\"smart_object_cache\");\n\nconst SMALLEST_NUM = -9007199254740991;\n\nexport interface SmartObject {\n  (obj: any): SmartObject;\n}\n\nexport const SmartObject = {\n  generateKey(): number {\n    return Math.random() * 100;\n  },\n  changed(sObj: SmartObject, key: number) {\n    const newValue = sObj[SMART_OBJECT];\n    if (!sObj[SMART_OBJECT_CACHE]) {\n      sObj[SMART_OBJECT_CACHE] = {};\n    }\n\n    if (sObj[SMART_OBJECT_CACHE][key] === undefined) {\n      sObj[key] = newValue;\n      return true;\n    }\n\n    return sObj[SMART_OBJECT_CACHE][key] < (sObj[SMART_OBJECT_CACHE][key] = newValue);\n  },\n  assign(sObj: SmartObject, objDiff: object) {\n    Object.assign(sObj, objDiff);\n    sObj[SMART_OBJECT] = sObj[SMART_OBJECT] + 1;\n  }\n};\n\nfunction _createSmartObject(obj: object): SmartObject {\n  const sObj = (objDiff: object): SmartObject => {\n    SmartObject.assign(sObj, objDiff);\n    return sObj;\n  };\n\n  Object.assign(sObj, obj);\n  // smallest integer possible in JavaScript\n  sObj[SMART_OBJECT] = SMALLEST_NUM;\n\n  return sObj;\n}\n\nexport function createSmartObjects(rootObj: object): State {\n  const root: State = <State>rootObj;\n\n  Object.keys(root).forEach(key => {\n    root[key] = _createSmartObject(root[key]);\n  });\n\n  return root;\n}","import { State, Action, ActionType } from \"../structs\";\n\nimport { Func2 } from \"redux\";\n\nexport default function createReducer(map: any): Func2<State,Action,State> {\n  return function(state: State, action: Action) {\n    if (map[action.type]) {\n      let actionType = action.type;\n      while (parseInt(map[actionType]) === map[actionType]) {\n        actionType = map[actionType];\n      }\n\n      return map[actionType](state, action);\n    }\n\n    if (map[ActionType.INITIAL]) {\n      return map[ActionType.INITIAL](state, action);\n    }\n\n    return { ...state };\n  }\n}","import { resolveImmediate } from \"../../util/okComputer\";\n\nexport default class StorageContainer {\n  prefix: string;\n\n  obj: object;\n  _obj: object;\n\n  _saveLater: Promise<any>;\n\n  constructor(prefix: string) {\n    // just in case, doesn't hurt anything\n    prefix = `$${prefix}`;\n    this.prefix = prefix;\n\n    // save empty object if there isn't a local storage entry\n    this.load() || this.save((this._obj = {}));\n\n    const self = this;\n    const handler: ProxyHandler<any> = {\n      set(target: any, prop: string, value: any) {\n        target[prop] = value;\n        self.saveLater();\n        return true;\n      }\n    };\n\n    // automatically queues save on property set\n    this.obj = new Proxy(this._obj, handler);\n  }\n\n  load(): object {\n    if (this._obj) {\n      return { ...this._obj };\n    }\n\n    return localStorage[this.prefix] ? { ...(this._obj = JSON.parse(localStorage[this.prefix])) } : undefined;\n  }\n\n  save(exp?: any): object {\n    localStorage[this.prefix] = JSON.stringify(this._obj);\n    return { ...this._obj };\n  }\n\n  // coalesces save until later so we can call save multiple times\n  // in succession, i.e. with proxies\n  // also allows us to wait async until calls are made,\n  // like ones for invalidation\n  saveLater(): Promise<any> {\n    if (!this._saveLater) {\n      this._saveLater = resolveImmediate(() => {\n        this.save();\n        this._saveLater = null;\n      });\n    }\n\n    return this._saveLater;\n  }\n}","import { State } from \"../structs\";\nimport { SmartObject } from \"./smartObjects\";\nimport StorageContainer from \"./StorageContainer\";\n\nimport { Store } from \"redux\";\n\nconst IS_HYDRATED = Symbol.for(\"is_hydrated\");\nconst INVALIDATE_KEY = '@@invalidate';\n\nconst randomKey = SmartObject.generateKey();\n\nexport function wasHydrated(obj: SmartObject): boolean {\n  return !!obj[IS_HYDRATED];\n}\n\nconst storageContainers: { [key: string]: StorageContainer } = {};\nexport function hydrate(state: State, smartObjects: { [key: string]: (a: any) => void }): State {\n  const keys = Object.keys(smartObjects);\n  let i = 0, length = keys.length;\n  for (; i < length; i++) {\n    const name: string = keys[i];\n    storageContainers[name] = new StorageContainer(name);\n\n    const obj: SmartObject = state[name];\n    const storage = storageContainers[name].obj;\n\n    // it's invalidated, don't try to hydrate\n    if (!!storage[INVALIDATE_KEY]) {\n      continue;\n    }\n\n    let hydrated = false;\n    Object.keys(storage).forEach(prop => {\n      if (!!storage[prop]) {\n        hydrated = true;\n        obj[prop] = storage[prop];\n      }\n    });\n\n    if (hydrated) {\n      console.log(\"hydrated @\" + name);\n      obj[IS_HYDRATED] = true;\n    }\n\n    smartObjects[name](obj);\n    // make sure to update smart object\n    obj({});\n  }\n\n  return state;\n}\n\nexport function createStorageContainers(store: Store<State>, smartObjects: { [key: string]: (a: any) => void|boolean }): () => void {\n  const func = async () => {\n    const state = store.getState();\n\n    const keys = Object.keys(smartObjects);\n    let i = 0, length = keys.length;\n    for (; i < length; i++) {\n      const name: string = keys[i];\n      const obj: SmartObject = state[name];\n\n      if (!SmartObject.changed(obj, randomKey)) {\n        continue;\n      }\n\n      const container = storageContainers[name];\n      const storage = container.obj;\n\n      const serialized = { ...state[name] };\n      if (smartObjects[name](serialized) === false) {\n        continue;\n      }\n\n      storage[INVALIDATE_KEY] = true;\n\n      await container.saveLater();\n\n      Object.keys(serialized).forEach(prop => {\n        storage[prop] = serialized[prop];\n      });\n\n      await container.saveLater();\n\n      storage[INVALIDATE_KEY] = false;\n    }\n  };\n\n  func();\n\n  return func;\n}","function createThunkMiddleware(extraArgument) {\n  return function (_ref) {\n    var dispatch = _ref.dispatch,\n        getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        if (typeof action === 'function') {\n          return action(dispatch, getState, extraArgument);\n        }\n\n        return next(action);\n      };\n    };\n  };\n}\n\nvar thunk = createThunkMiddleware();\nthunk.withExtraArgument = createThunkMiddleware;\n\nexport default thunk;","import { createActionCreators } from \"./actionCreators\";\nimport { createSmartObjects } from \"./util/smartObjects\";\n\nimport createReducer from \"./util/_createReducer\";\nimport { hydrate, createStorageContainers } from \"./util/hydrate\";\n\nimport { Action, ActionType, State } from \"./structs\";\n\nimport { timeFromDate } from \"./util/time\";\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nconst reducerMap = {\n  // time\n  [ActionType.TICK_EVERY_SECOND](state, action) {\n    state.time({\n      isEveryOtherTick: !state.time.isEveryOtherTick\n    });\n\n    return state;\n  },\n  [ActionType.TICK_EVERY_MINUTE](state, action) {\n    const date = new Date(Date.now());\n    const [ hours, minutes ] = timeFromDate(date);\n\n    state.time({\n      hours,\n      minutes\n    });\n\n    return state;\n  },\n  // background\n  [ActionType.UPDATE_BACKGROUND](state, action) {\n    state.background({\n      dataUrl: action.dataUrl,\n      gradient: action.gradient,\n      shadows: action.shadows,\n      textColor: action.textColor,\n      preload: action.preload\n    });\n\n    return state;\n  },\n  // initial\n  [ActionType.INITIAL](state, action) {\n    return hydrate(\n      createSmartObjects({\n        time: {\n          hours: \"00\",\n          minutes: \"00\"\n        },\n        background: {\n        }\n      }),\n      {\n        background(obj: any) { }\n      }\n    );\n  }\n};\n\nexport const store = createStore(\n  createReducer(reducerMap),\n  applyMiddleware(thunk)\n);\n\nstore.subscribe(\n  createStorageContainers(store, {\n    background(obj: any): boolean {\n      if (!obj.preload) {\n        return false;\n      }\n\n      // make sure we can load the next image\n      obj.preload = false;\n\n      return true;\n    }\n  })\n);\n\nexport const actions = createActionCreators(store);","export function main()  {\n\n};","// @ts-ignore\nimport \"../styles/main.scss\";\n\nimport { resolveImmediate } from \"./util/okComputer\";\n\nimport { actions, store } from \"./state\";\nimport { State } from \"./state/structs\";\nimport { wasHydrated } from \"./state/util/hydrate\";\nimport { SmartObject } from \"./state/util/smartObjects\";\n\nfunction onLoad() {\n  const background: HTMLElement = <HTMLElement>document.querySelector(\".background\")!;\n  const container: HTMLElement = <HTMLElement>document.querySelector(\".container\")!;\n  \n  const dividerChildList = document.querySelectorAll(\".divider-child\")!;\n  const timeList = document.querySelectorAll(\".time\")!;\n\n  const divHours: HTMLElement = <HTMLElement>document.querySelector(\".hours\")!;\n  const divMinutes: HTMLElement = <HTMLElement>document.querySelector(\".minutes\")!;\n\n  const randomKey: number = SmartObject.generateKey();\n\n  store.subscribe(() => {\n    const state: State = store.getState();\n\n    if (SmartObject.changed(state.time, randomKey)) {\n      const { isEveryOtherTick, hours, minutes } = state.time;\n\n      // update divider\n\n      dividerChildList.forEach(el => {\n        // add dimming\n        if (!!isEveryOtherTick && !el.classList.contains(\"dim\")) {\n          el.classList.add(\"dim\");\n        }\n      \n        // disable dimming\n        if (!isEveryOtherTick && el.classList.contains(\"dim\")) {\n          el.classList.remove(\"dim\");\n        }\n      });\n\n      // update clock\n  \n      divHours.innerHTML = hours;\n      divMinutes.innerHTML = minutes;\n    }\n\n    if (SmartObject.changed(state.background, randomKey) && !state.background.preload) {\n      const { dataUrl, gradient, shadows, textColor } = state.background;\n\n      // set background image\n      background.style.backgroundImage = `url(${dataUrl})`;\n      document.body.style.opacity = \"1\";\n\n      // set container style\n\n      container.style.setProperty(\"--gradient-main\", gradient[0]);\n      container.style.setProperty(\"--gradient-secondary\", gradient[1]);\n\n      container.style.boxShadow = `0 4px 32px ${shadows[0]}, 0 32px 128px ${shadows[1]}`;\n\n      // set text style\n\n      timeList.forEach(el => (<HTMLElement>el).style.color = textColor);\n      dividerChildList.forEach(el => (<HTMLElement>el).style.backgroundColor = textColor);  \n    }\n  });\n\n  resolveImmediate(async () => {\n    try {\n      if (!wasHydrated(store.getState().background)) {\n        await actions.fetchBackground();\n      }\n  \n      // prefetch for next time\n      await actions.fetchBackground(true);\n    } catch (e) {\n      console.log(e);\n    }\n  });\n\n  if (\"registerProperty\" in CSS) {\n    // @ts-ignore\n    CSS.registerProperty({\n      name: \"--gradient-main\",\n      syntax: \"<color>\",\n      inherits: false,\n      initialValue: \"transparent\"\n    });\n\n    // @ts-ignore\n    CSS.registerProperty({\n      name: \"--gradient-secondary\",\n      syntax: \"<color>\",\n      inherits: false,\n      initialValue: \"transparent\"\n    });\n  }\n\n  actions.tickEveryMinute();\n  actions.tickEverySecond();\n\n  // load extras\n  import(\"./entry_extras\").then(module => module.main());\n\n  // @ts-ignore\n  require.ensure([\"./entry_extras\"], function(require) { console.log(\"loaded extras!\"); require(\"./entry_extras\"); }, error => {}, \"extras\");\n}\n\nwindow.addEventListener(\"load\", () => {\n  resolveImmediate(onLoad);\n});"]}